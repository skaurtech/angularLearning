{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { AddContentComponent } from \"../add-content/add-content.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/content.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/material/button\";\nexport let CreateContentComponent = /*#__PURE__*/(() => {\n  class CreateContentComponent {\n    constructor(contentService, dialog, snackBar) {\n      this.contentService = contentService;\n      this.dialog = dialog;\n      this.snackBar = snackBar;\n      this.newContentEvent = new EventEmitter();\n      this.updateContentEvent = new EventEmitter();\n    }\n\n    ngOnInit() {}\n\n    onAddNews() {\n      if (this.newContent.body && this.newContent.title && this.newContent.author) {\n        this.snackBar.open('News has been added!');\n        this.error = undefined;\n        this.contentService.addNewContent(this.newContent).subscribe(serverContent => {\n          this.newContent = serverContent;\n          this.newContentEvent.emit(this.newContent);\n          console.log(this.newContent.title);\n        });\n      } else {\n        this.error = `You need to add all required fields: ${this.newContent.title ? '' : 'title'} ${this.newContent.body ? '' : 'body'} ${this.newContent.author ? '' : 'author'}`;\n      }\n    } // onAddNews(\n    //   title: string,\n    //   body: string,\n    //   author: string,\n    //   imgUrl: string,\n    //   type: string,\n    //   tags: string\n    // ) {\n    //   this.newContent = {\n    //     id: 0,\n    //     title: title,\n    //     body: body,\n    //     author: author,\n    //     imgUrl: imgUrl,\n    //     type: type,\n    //     tags: [tags]\n    //   };\n    //   if (body && title && author) {\n    //     this.error = undefined;\n    //     this.contentService\n    //       .addNewContent(this.newContent)\n    //       .subscribe((serverContent) => {\n    //         this.newContent = serverContent;\n    //         this.newContentEvent.emit(this.newContent);\n    //         console.log(this.newContent.title);\n    //       });\n    //   } else {\n    //     this.error = `You need to add all required fields: ${\n    //       title ? '' : 'title,'\n    //     } ${body ? '' : 'body, and'} ${author ? '' : 'author'}`;\n    //   }\n    // }\n    // onUpdateNews(\n    //   id: string,\n    //   title: string,\n    //   body: string,\n    //   author: string,\n    //   imgUrl: string,\n    //   type: string,\n    //   tags: string\n    // ) {\n    //   this.newContent = {\n    //     id: +id,\n    //     title: title,\n    //     body: body,\n    //     author: author,\n    //     imgUrl: imgUrl,\n    //     type: type,\n    //     tags: [tags],\n    //   };\n    //\n    //   console.log(this.newContent);\n    //\n    //   if (body && title && author) {\n    //     this.error = undefined;\n    //     this.contentService\n    //       .updateContent(this.newContent)\n    //       .subscribe((response) => {\n    //         console.log(response);\n    //       });\n    //   } else {\n    //     this.error = `You need to add all required fields: ${\n    //       title ? '' : 'title,'\n    //     } ${body ? '' : 'body, and'} ${author ? '' : 'author'}`;\n    //   }\n    // }\n\n\n    onUpdateNews() {\n      this.newContent.id = +this.newContent.id;\n      console.log(this.newContent);\n\n      if (this.newContent.body && this.newContent.title && this.newContent.author) {\n        this.error = undefined;\n        this.contentService.updateContent(this.newContent).subscribe(response => {\n          console.log(response);\n        });\n      } else {\n        this.error = `You need to add all required fields: ${this.newContent.title ? '' : 'title'} ${this.newContent.body ? '' : 'body'} ${this.newContent.author ? '' : 'author'}`;\n      }\n    }\n\n    openAddNewsDialog() {\n      const newsDialog = this.dialog.open(AddContentComponent, {\n        width: '600px'\n      });\n      newsDialog.afterClosed().subscribe(newsFromDialog => {\n        console.log(newsFromDialog);\n        this.newContent = newsFromDialog;\n\n        if (this.newContent) {\n          this.onAddNews();\n          console.log(this.newContent);\n        }\n      });\n    }\n\n  }\n\n  CreateContentComponent.ɵfac = function CreateContentComponent_Factory(t) {\n    return new (t || CreateContentComponent)(i0.ɵɵdirectiveInject(i1.ContentService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n  };\n\n  CreateContentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateContentComponent,\n    selectors: [[\"app-create-content\"]],\n    outputs: {\n      newContentEvent: \"newContentEvent\",\n      updateContentEvent: \"updateContentEvent\"\n    },\n    decls: 3,\n    vars: 0,\n    consts: [[1, \"form\"], [\"mat-flat-button\", \"\", \"color\", \"accent\", 3, \"click\"]],\n    template: function CreateContentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function CreateContentComponent_Template_button_click_1_listener() {\n          return ctx.openAddNewsDialog();\n        });\n        i0.ɵɵtext(2, \"Add More News [+]\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n    },\n    directives: [i4.MatButton],\n    styles: [\"div[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{border:3px solid #ef2b2b}button[_ngcontent-%COMP%]{border:3px solid #000000;width:60%;padding:10px;margin:25px}\"]\n  });\n  return CreateContentComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}